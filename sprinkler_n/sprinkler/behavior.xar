<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="3">
    <Box name="root" id="-1" tooltip="Root box of Choregraphe&apos;s project. Highest level possible." x="0" y="0">
        <bitmap>media/images/box/root.png</bitmap>
        <script language="4">
            <content>
                <![CDATA[]]>
</content>
        </script>
        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
        <Timeline enable="0">
            <BehaviorLayer name="behavior_layer1">
                <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                        <Box name="Timeline" id="1" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="309" y="143">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="1" fps="25" start_frame="0" end_frame="-1" size="300">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram />
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList model="">
                                    <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" unit="0">
                                        <Key frame="25" value="-7.20952" />
                                        <Key frame="62" value="-13.4" />
                                        <Key frame="175" value="-9.93417" />
                                        <Key frame="198" value="-9.93417" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" unit="0">
                                        <Key frame="25" value="-0.61764" />
                                        <Key frame="62" value="52.3" />
                                        <Key frame="175" value="12.5661" />
                                        <Key frame="198" value="12.5661" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" unit="0">
                                        <Key frame="25" value="5.44688" />
                                        <Key frame="58" value="-12.3073" />
                                        <Key frame="175" value="-23.2937" />
                                        <Key frame="198" value="-23.2937" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" unit="0">
                                        <Key frame="25" value="-6.67737" />
                                        <Key frame="58" value="-8.17153" />
                                        <Key frame="175" value="-6.85315" />
                                        <Key frame="198" value="-6.85315" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="0">
                                        <Key frame="25" value="-22.9373" />
                                        <Key frame="60" value="-2" />
                                        <Key frame="75" value="-2.63435" />
                                        <Key frame="175" value="-20.5643" />
                                        <Key frame="198" value="-20.5643" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="0">
                                        <Key frame="25" value="-69.349" />
                                        <Key frame="60" value="-85.3453" />
                                        <Key frame="75" value="-84.8179" />
                                        <Key frame="175" value="-72.2494" />
                                        <Key frame="198" value="-72.2494" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="1">
                                        <Key frame="25" value="0.3056" />
                                        <Key frame="60" value="0.9616" />
                                        <Key frame="75" value="0.9592" />
                                        <Key frame="175" value="0.9616" />
                                        <Key frame="198" value="0.9616" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" unit="0">
                                        <Key frame="25" value="7.82477" />
                                        <Key frame="58" value="-8.25942" />
                                        <Key frame="175" value="-15.3786" />
                                        <Key frame="198" value="-15.3786" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" unit="0">
                                        <Key frame="25" value="6.59429" />
                                        <Key frame="58" value="13.362" />
                                        <Key frame="175" value="9.93417" />
                                        <Key frame="198" value="9.93417" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" unit="0">
                                        <Key frame="25" value="-9.92936" />
                                        <Key frame="58" value="-16.5212" />
                                        <Key frame="175" value="-16.0818" />
                                        <Key frame="198" value="-16.0818" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" unit="0">
                                        <Key frame="25" value="-5.18802" />
                                        <Key frame="58" value="30.9355" />
                                        <Key frame="175" value="47.0197" />
                                        <Key frame="198" value="47.0197" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="0">
                                        <Key frame="25" value="87.7135" />
                                        <Key frame="60" value="-24.0847" />
                                        <Key frame="62" value="-32.1" />
                                        <Key frame="75" value="-23.9" />
                                        <Key frame="175" value="-5.53958" />
                                        <Key frame="198" value="-5.53958" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="0">
                                        <Key frame="25" value="7.73207" />
                                        <Key frame="60" value="46.9318" />
                                        <Key frame="75" value="26.453" />
                                        <Key frame="86" value="35" />
                                        <Key frame="95" value="12.8" />
                                        <Key frame="105" value="26.4" />
                                        <Key frame="115" value="2.5" />
                                        <Key frame="124" value="17.9" />
                                        <Key frame="135" value="-3.5" />
                                        <Key frame="145" value="11.9" />
                                        <Key frame="154" value="-11.2" />
                                        <Key frame="165" value="3.4" />
                                        <Key frame="175" value="-9.14314" />
                                        <Key frame="198" value="-9.14314" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="0">
                                        <Key frame="25" value="6.94104" />
                                        <Key frame="60" value="17.9275" />
                                        <Key frame="75" value="7.55628" />
                                        <Key frame="86" value="3.8" />
                                        <Key frame="95" value="3.8" />
                                        <Key frame="175" value="-16.8776" />
                                        <Key frame="198" value="-16.8776" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" unit="0">
                                        <Key frame="25" value="5.89115" />
                                        <Key frame="58" value="-1.14019" />
                                        <Key frame="175" value="-15.115" />
                                        <Key frame="198" value="-15.115" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" unit="0">
                                        <Key frame="25" value="4.13332" />
                                        <Key frame="58" value="6.68218" />
                                        <Key frame="175" value="4.74855" />
                                        <Key frame="198" value="4.74855" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="0">
                                        <Key frame="25" value="22.0632" />
                                        <Key frame="61" value="88.5" />
                                        <Key frame="74" value="88.1578" />
                                        <Key frame="85" value="88.5" />
                                        <Key frame="95" value="88.1578" />
                                        <Key frame="106" value="88.5" />
                                        <Key frame="115" value="88.1578" />
                                        <Key frame="125" value="88.5" />
                                        <Key frame="137" value="88.1578" />
                                        <Key frame="145" value="88.5" />
                                        <Key frame="155" value="88.1578" />
                                        <Key frame="164" value="88.5" />
                                        <Key frame="175" value="87.982" />
                                        <Key frame="198" value="87.982" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="0">
                                        <Key frame="25" value="67.85" />
                                        <Key frame="61" value="55.3694" />
                                        <Key frame="74" value="79.5396" />
                                        <Key frame="85" value="55.3694" />
                                        <Key frame="95" value="79.5396" />
                                        <Key frame="106" value="55.3694" />
                                        <Key frame="115" value="79.5396" />
                                        <Key frame="125" value="55.3694" />
                                        <Key frame="137" value="79.5396" />
                                        <Key frame="145" value="55.3694" />
                                        <Key frame="155" value="79.5396" />
                                        <Key frame="164" value="55.3694" />
                                        <Key frame="175" value="78.4849" />
                                        <Key frame="198" value="78.4849" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="1">
                                        <Key frame="25" value="0.3068" />
                                        <Key frame="61" value="0.7708" />
                                        <Key frame="74" value="0.7696" />
                                        <Key frame="85" value="0.7708" />
                                        <Key frame="95" value="0.7696" />
                                        <Key frame="106" value="0.7708" />
                                        <Key frame="115" value="0.7696" />
                                        <Key frame="125" value="0.7708" />
                                        <Key frame="137" value="0.7696" />
                                        <Key frame="145" value="0.7708" />
                                        <Key frame="155" value="0.7696" />
                                        <Key frame="164" value="0.7708" />
                                        <Key frame="175" value="0.7692" />
                                        <Key frame="198" value="0.7692" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" unit="0">
                                        <Key frame="25" value="7.46839" />
                                        <Key frame="58" value="7.90786" />
                                        <Key frame="175" value="-14.4166" />
                                        <Key frame="198" value="-14.4166" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" unit="0">
                                        <Key frame="25" value="-3.77694" />
                                        <Key frame="58" value="-2.1949" />
                                        <Key frame="175" value="-1.66754" />
                                        <Key frame="198" value="-1.66754" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHipYawPitch" recordable="1" mute="0" unit="0">
                                        <Key frame="25" value="-9.92936" />
                                        <Key frame="58" value="-16.5212" />
                                        <Key frame="175" value="-16.0818" />
                                        <Key frame="198" value="-16.0818" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" unit="0">
                                        <Key frame="25" value="-5.18321" />
                                        <Key frame="58" value="4.57277" />
                                        <Key frame="175" value="38.7627" />
                                        <Key frame="198" value="38.7627" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="0">
                                        <Key frame="25" value="86.5758" />
                                        <Key frame="61" value="-42.5372" />
                                        <Key frame="74" value="-32.4296" />
                                        <Key frame="85" value="-42.5372" />
                                        <Key frame="95" value="-32.4296" />
                                        <Key frame="106" value="-42.5372" />
                                        <Key frame="115" value="-32.4296" />
                                        <Key frame="125" value="-42.5372" />
                                        <Key frame="137" value="-32.4296" />
                                        <Key frame="145" value="-42.5372" />
                                        <Key frame="155" value="-32.4296" />
                                        <Key frame="164" value="-42.5372" />
                                        <Key frame="175" value="-31.1992" />
                                        <Key frame="198" value="-31.1992" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="0">
                                        <Key frame="25" value="-6.5064" />
                                        <Key frame="61" value="-24.7879" />
                                        <Key frame="74" value="-3.51807" />
                                        <Key frame="85" value="-24.7879" />
                                        <Key frame="95" value="-3.51807" />
                                        <Key frame="106" value="-24.7879" />
                                        <Key frame="115" value="-3.51807" />
                                        <Key frame="125" value="-24.7879" />
                                        <Key frame="137" value="-3.51807" />
                                        <Key frame="145" value="-24.7879" />
                                        <Key frame="155" value="-3.51807" />
                                        <Key frame="164" value="-24.7879" />
                                        <Key frame="175" value="-4.3091" />
                                        <Key frame="198" value="-4.3091" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="0">
                                        <Key frame="25" value="6.06212" />
                                        <Key frame="61" value="74.7935" />
                                        <Key frame="74" value="46.0529" />
                                        <Key frame="85" value="74.7935" />
                                        <Key frame="95" value="46.0529" />
                                        <Key frame="106" value="74.7935" />
                                        <Key frame="115" value="46.0529" />
                                        <Key frame="125" value="74.7935" />
                                        <Key frame="137" value="46.0529" />
                                        <Key frame="145" value="74.7935" />
                                        <Key frame="155" value="46.0529" />
                                        <Key frame="164" value="74.7935" />
                                        <Key frame="175" value="47.0197" />
                                        <Key frame="198" value="47.0197" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="Say" id="2" tooltip="Say some text. Note that you must open the box to enter the text." x="284" y="24">
                            <bitmap>media/images/box/interaction/say.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                            <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                            <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="Say Text" id="2" tooltip="Say the text received on its input." x="422" y="65">
                                                <bitmap>media/images/box/interaction/say.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []
        
    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                            </Box>
                                            <Box name="Localized Text" id="5" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                                <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 你好 ",
			"English" : " Do the sprinkler with me! ",
			"French" : " Bonjour ",
			"German" : " Hallo ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Portuguese" : " Olá ",
			"Brazilian" : "  ",
			"Spanish" : " Hola ",
			"Arabic" : "  ",
			"Polish" : "  ",
			"Czech" : "  ",
			"Dutch" : "  ",
			"Danish" : "  ",
			"Finnish" : "  ",
			"Swedish" : "  ",
			"Russian" : "  ",
			"Turkish" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <chinese>你好</chinese>
                                                    <english>Do the sprinkler with me!</english>
                                                    <french>Bonjour</french>
                                                    <german>Hallo</german>
                                                    <italian>Ciao</italian>
                                                    <japanese>こんにちは</japanese>
                                                    <korean>안녕하세요</korean>
                                                    <portuguese>Olá</portuguese>
                                                    <brazilian></brazilian>
                                                    <spanish>Hola</spanish>
                                                    <arabic></arabic>
                                                    <polish></polish>
                                                    <czech></czech>
                                                    <dutch></dutch>
                                                    <danish></danish>
                                                    <finnish></finnish>
                                                    <swedish></swedish>
                                                    <russian></russian>
                                                    <turkish></turkish>
                                                    <language>1</language>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                            </Box>
                                            <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                            <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                        </Box>
                        <Box name="Timeline" id="3" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="908" y="199">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="1" fps="25" start_frame="0" end_frame="-1" size="300">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram />
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList model="">
                                    <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" unit="0">
                                        <Key frame="62" value="-13.4" />
                                        <Key frame="175" value="-9.93417" />
                                        <Key frame="186" value="-9.93417" />
                                        <Key frame="219" value="-9.93417" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" unit="0">
                                        <Key frame="62" value="-52.3" />
                                        <Key frame="175" value="-12.5661" />
                                        <Key frame="186" value="-12.5661" />
                                        <Key frame="219" value="0.61764" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" unit="0">
                                        <Key frame="58" value="-1.14019" />
                                        <Key frame="175" value="-15.115" />
                                        <Key frame="186" value="-15.115" />
                                        <Key frame="219" value="6.15482" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" unit="0">
                                        <Key frame="58" value="-6.68218" />
                                        <Key frame="175" value="-4.74855" />
                                        <Key frame="186" value="-4.74855" />
                                        <Key frame="219" value="-4.22121" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="0">
                                        <Key frame="61" value="-88.5" />
                                        <Key frame="74" value="-88.1578" />
                                        <Key frame="85" value="-88.5" />
                                        <Key frame="95" value="-88.1578" />
                                        <Key frame="106" value="-88.5" />
                                        <Key frame="115" value="-88.1578" />
                                        <Key frame="125" value="-88.5" />
                                        <Key frame="137" value="-88.1578" />
                                        <Key frame="145" value="-88.5" />
                                        <Key frame="155" value="-88.1578" />
                                        <Key frame="164" value="-88.5" />
                                        <Key frame="175" value="-87.982" />
                                        <Key frame="186" value="-87.982" />
                                        <Key frame="219" value="-23.6453" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="0">
                                        <Key frame="61" value="-55.3694" />
                                        <Key frame="74" value="-79.5396" />
                                        <Key frame="85" value="-55.3694" />
                                        <Key frame="95" value="-79.5396" />
                                        <Key frame="106" value="-55.3694" />
                                        <Key frame="115" value="-79.5396" />
                                        <Key frame="125" value="-55.3694" />
                                        <Key frame="137" value="-79.5396" />
                                        <Key frame="145" value="-55.3694" />
                                        <Key frame="155" value="-79.5396" />
                                        <Key frame="164" value="-55.3694" />
                                        <Key frame="175" value="-78.4849" />
                                        <Key frame="186" value="-78.4849" />
                                        <Key frame="219" value="-68.4652" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="1">
                                        <Key frame="61" value="0.7708" />
                                        <Key frame="74" value="0.7696" />
                                        <Key frame="85" value="0.7708" />
                                        <Key frame="95" value="0.7696" />
                                        <Key frame="106" value="0.7708" />
                                        <Key frame="115" value="0.7696" />
                                        <Key frame="125" value="0.7708" />
                                        <Key frame="137" value="0.7696" />
                                        <Key frame="145" value="0.7708" />
                                        <Key frame="155" value="0.7696" />
                                        <Key frame="164" value="0.7708" />
                                        <Key frame="175" value="0.7692" />
                                        <Key frame="186" value="0.7692" />
                                        <Key frame="219" value="0.3068" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" unit="0">
                                        <Key frame="58" value="7.90786" />
                                        <Key frame="175" value="-14.4166" />
                                        <Key frame="186" value="-14.4166" />
                                        <Key frame="219" value="7.64417" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" unit="0">
                                        <Key frame="58" value="2.1949" />
                                        <Key frame="175" value="1.66754" />
                                        <Key frame="186" value="1.66754" />
                                        <Key frame="219" value="3.68905" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" unit="0">
                                        <Key frame="58" value="-16.5212" />
                                        <Key frame="175" value="-16.0818" />
                                        <Key frame="186" value="-16.0818" />
                                        <Key frame="219" value="-9.66569" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" unit="0">
                                        <Key frame="58" value="4.57277" />
                                        <Key frame="175" value="38.7627" />
                                        <Key frame="186" value="38.7627" />
                                        <Key frame="219" value="-5.2711" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="0">
                                        <Key frame="61" value="-42.5372" />
                                        <Key frame="74" value="-32.4296" />
                                        <Key frame="85" value="-42.5372" />
                                        <Key frame="95" value="-32.4296" />
                                        <Key frame="106" value="-42.5372" />
                                        <Key frame="115" value="-32.4296" />
                                        <Key frame="125" value="-42.5372" />
                                        <Key frame="137" value="-32.4296" />
                                        <Key frame="145" value="-42.5372" />
                                        <Key frame="155" value="-32.4296" />
                                        <Key frame="164" value="-42.5372" />
                                        <Key frame="175" value="-31.1992" />
                                        <Key frame="186" value="-31.1992" />
                                        <Key frame="219" value="84.9058" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="0">
                                        <Key frame="61" value="24.7879" />
                                        <Key frame="74" value="3.51807" />
                                        <Key frame="85" value="24.7879" />
                                        <Key frame="95" value="3.51807" />
                                        <Key frame="106" value="24.7879" />
                                        <Key frame="115" value="3.51807" />
                                        <Key frame="125" value="24.7879" />
                                        <Key frame="137" value="3.51807" />
                                        <Key frame="145" value="24.7879" />
                                        <Key frame="155" value="3.51807" />
                                        <Key frame="164" value="24.7879" />
                                        <Key frame="175" value="4.3091" />
                                        <Key frame="186" value="4.3091" />
                                        <Key frame="219" value="4.66066" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="0">
                                        <Key frame="61" value="-74.7935" />
                                        <Key frame="74" value="-46.0529" />
                                        <Key frame="85" value="-74.7935" />
                                        <Key frame="95" value="-46.0529" />
                                        <Key frame="106" value="-74.7935" />
                                        <Key frame="115" value="-46.0529" />
                                        <Key frame="125" value="-74.7935" />
                                        <Key frame="137" value="-46.0529" />
                                        <Key frame="145" value="-74.7935" />
                                        <Key frame="155" value="-46.0529" />
                                        <Key frame="164" value="-74.7935" />
                                        <Key frame="175" value="-47.0197" />
                                        <Key frame="186" value="-47.0197" />
                                        <Key frame="219" value="-9.5778" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" unit="0">
                                        <Key frame="58" value="-12.3073" />
                                        <Key frame="175" value="-23.2937" />
                                        <Key frame="186" value="-23.2937" />
                                        <Key frame="219" value="5.79845" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" unit="0">
                                        <Key frame="58" value="8.17153" />
                                        <Key frame="175" value="6.85315" />
                                        <Key frame="186" value="6.85315" />
                                        <Key frame="219" value="6.76526" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="0">
                                        <Key frame="60" value="2" />
                                        <Key frame="75" value="2.63435" />
                                        <Key frame="175" value="20.5643" />
                                        <Key frame="186" value="20.5643" />
                                        <Key frame="219" value="22.2342" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="0">
                                        <Key frame="60" value="85.3453" />
                                        <Key frame="75" value="84.8179" />
                                        <Key frame="175" value="72.2494" />
                                        <Key frame="186" value="72.2494" />
                                        <Key frame="219" value="69.6127" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="1">
                                        <Key frame="60" value="0.9616" />
                                        <Key frame="75" value="0.9592" />
                                        <Key frame="175" value="0.9616" />
                                        <Key frame="186" value="0.9616" />
                                        <Key frame="219" value="0.3052" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" unit="0">
                                        <Key frame="58" value="-8.25942" />
                                        <Key frame="175" value="-15.3786" />
                                        <Key frame="186" value="-15.3786" />
                                        <Key frame="219" value="8.17634" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" unit="0">
                                        <Key frame="58" value="-13.362" />
                                        <Key frame="175" value="-9.93417" />
                                        <Key frame="186" value="-9.93417" />
                                        <Key frame="219" value="-6.59429" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHipYawPitch" recordable="1" mute="0" unit="0">
                                        <Key frame="58" value="-16.5212" />
                                        <Key frame="175" value="-16.0818" />
                                        <Key frame="186" value="-16.0818" />
                                        <Key frame="219" value="-9.66569" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" unit="0">
                                        <Key frame="58" value="30.9355" />
                                        <Key frame="175" value="47.0197" />
                                        <Key frame="186" value="47.0197" />
                                        <Key frame="219" value="-5.29" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="0">
                                        <Key frame="60" value="-24.0847" />
                                        <Key frame="62" value="-32.1" />
                                        <Key frame="75" value="-23.9" />
                                        <Key frame="175" value="-5.53958" />
                                        <Key frame="186" value="-5.53958" />
                                        <Key frame="219" value="85.2526" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="0">
                                        <Key frame="60" value="-46.9318" />
                                        <Key frame="75" value="-26.453" />
                                        <Key frame="86" value="-35" />
                                        <Key frame="95" value="-12.8" />
                                        <Key frame="105" value="-26.4" />
                                        <Key frame="115" value="-2.5" />
                                        <Key frame="124" value="-17.9" />
                                        <Key frame="135" value="3.5" />
                                        <Key frame="145" value="-11.9" />
                                        <Key frame="154" value="11.2" />
                                        <Key frame="165" value="-3.4" />
                                        <Key frame="175" value="9.14314" />
                                        <Key frame="186" value="9.14314" />
                                        <Key frame="219" value="-5.09532" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="0">
                                        <Key frame="60" value="-17.9275" />
                                        <Key frame="75" value="-7.55628" />
                                        <Key frame="86" value="-3.8" />
                                        <Key frame="95" value="-3.8" />
                                        <Key frame="175" value="16.8776" />
                                        <Key frame="186" value="16.8776" />
                                        <Key frame="219" value="-9.22623" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="Say" id="4" tooltip="Say some text. Note that you must open the box to enter the text." x="572" y="62">
                            <bitmap>media/images/box/interaction/say.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                            <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                            <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="Say Text" id="2" tooltip="Say the text received on its input." x="422" y="65">
                                                <bitmap>media/images/box/interaction/say.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []
        
    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                            </Box>
                                            <Box name="Localized Text" id="5" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                                <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 你好 ",
			"English" : " Now the other way! ",
			"French" : " Bonjour ",
			"German" : " Hallo ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Portuguese" : " Olá ",
			"Brazilian" : "  ",
			"Spanish" : " Hola ",
			"Arabic" : "  ",
			"Polish" : "  ",
			"Czech" : "  ",
			"Dutch" : "  ",
			"Danish" : "  ",
			"Finnish" : "  ",
			"Swedish" : "  ",
			"Russian" : "  ",
			"Turkish" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <chinese>你好</chinese>
                                                    <english>Now the other way!</english>
                                                    <french>Bonjour</french>
                                                    <german>Hallo</german>
                                                    <italian>Ciao</italian>
                                                    <japanese>こんにちは</japanese>
                                                    <korean>안녕하세요</korean>
                                                    <portuguese>Olá</portuguese>
                                                    <brazilian></brazilian>
                                                    <spanish>Hola</spanish>
                                                    <arabic></arabic>
                                                    <polish></polish>
                                                    <czech></czech>
                                                    <dutch></dutch>
                                                    <danish></danish>
                                                    <finnish></finnish>
                                                    <swedish></swedish>
                                                    <russian></russian>
                                                    <turkish></turkish>
                                                    <language>1</language>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                            </Box>
                                            <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                            <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                        </Box>
                        <Box name="Blink" id="5" tooltip="This box makes NAO blink once." x="204" y="290">
                            <bitmap>media/images/box/interaction/LED.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        self.leds = ALProxy("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05
        self.leds.post.fadeRGB( "FaceLed0", 0x000000, rDuration )
        self.leds.post.fadeRGB( "FaceLed1", 0x000000, rDuration )
        self.leds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration )
        self.leds.post.fadeRGB( "FaceLed3", 0x000000, rDuration )
        self.leds.post.fadeRGB( "FaceLed4", 0x000000, rDuration )
        self.leds.post.fadeRGB( "FaceLed5", 0x000000, rDuration )
        self.leds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration )
        self.leds.fadeRGB( "FaceLed7", 0x000000, rDuration )
        time.sleep( 0.1 )
        self.leds.fadeRGB( "FaceLeds", 0xffffff, rDuration )
        self.onDone()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                        </Box>
                        <Box name="Wait" id="6" tooltip="Wait a moment before sending a signal on the output. The wait can be stopped any&#x0A;time. You may restart it any time, and it will start again." x="66" y="295">
                            <bitmap>media/images/box/wait.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[import threading

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        self.tb = False

    def onUnload(self):
        if( self.tb ):
            self.tb.cancel()
            self.tb = False

    def triggerOutput( self, rPeriod = 1 ):
        self.onUnload() # to clean everything
        self.timerOutput()

    def startTimer( self, rPeriod = 1 ):
        if( self.tb ):
            self.tb.cancel()
        self.tb = threading.Timer( rPeriod, self.triggerOutput, [rPeriod] )
        self.tb.start()

    def onInput_onStart(self):
        self.startTimer( self.getParameter("Timeout (s)") )

    def onInput_onStop(self):
        bRunning = self.tb
        self.onUnload()
        if( bRunning and self.getParameter("Trigger timerOutput if cancelled")):
            self.timerOutput()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                            <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is ellapsed, or if the box is stopped." id="4" />
                            <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="3" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                            <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="6" />
                        </Box>
                        <Box name="Blink" id="7" tooltip="This box makes NAO blink once." x="460" y="318">
                            <bitmap>media/images/box/interaction/LED.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        self.leds = ALProxy("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05
        self.leds.post.fadeRGB( "FaceLed0", 0x000000, rDuration )
        self.leds.post.fadeRGB( "FaceLed1", 0x000000, rDuration )
        self.leds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration )
        self.leds.post.fadeRGB( "FaceLed3", 0x000000, rDuration )
        self.leds.post.fadeRGB( "FaceLed4", 0x000000, rDuration )
        self.leds.post.fadeRGB( "FaceLed5", 0x000000, rDuration )
        self.leds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration )
        self.leds.fadeRGB( "FaceLed7", 0x000000, rDuration )
        time.sleep( 0.1 )
        self.leds.fadeRGB( "FaceLeds", 0xffffff, rDuration )
        self.onDone()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                        </Box>
                        <Box name="Wait" id="8" tooltip="Wait a moment before sending a signal on the output. The wait can be stopped any&#x0A;time. You may restart it any time, and it will start again." x="326" y="304">
                            <bitmap>media/images/box/wait.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[import threading

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        self.tb = False

    def onUnload(self):
        if( self.tb ):
            self.tb.cancel()
            self.tb = False

    def triggerOutput( self, rPeriod = 1 ):
        self.onUnload() # to clean everything
        self.timerOutput()

    def startTimer( self, rPeriod = 1 ):
        if( self.tb ):
            self.tb.cancel()
        self.tb = threading.Timer( rPeriod, self.triggerOutput, [rPeriod] )
        self.tb.start()

    def onInput_onStart(self):
        self.startTimer( self.getParameter("Timeout (s)") )

    def onInput_onStop(self):
        bRunning = self.tb
        self.onUnload()
        if( bRunning and self.getParameter("Trigger timerOutput if cancelled")):
            self.timerOutput()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                            <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is ellapsed, or if the box is stopped." id="4" />
                            <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="2.3" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                            <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="6" />
                        </Box>
                        <Box name="Blink" id="9" tooltip="This box makes NAO blink once." x="711" y="337">
                            <bitmap>media/images/box/interaction/LED.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        self.leds = ALProxy("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05
        self.leds.post.fadeRGB( "FaceLed0", 0x000000, rDuration )
        self.leds.post.fadeRGB( "FaceLed1", 0x000000, rDuration )
        self.leds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration )
        self.leds.post.fadeRGB( "FaceLed3", 0x000000, rDuration )
        self.leds.post.fadeRGB( "FaceLed4", 0x000000, rDuration )
        self.leds.post.fadeRGB( "FaceLed5", 0x000000, rDuration )
        self.leds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration )
        self.leds.fadeRGB( "FaceLed7", 0x000000, rDuration )
        time.sleep( 0.1 )
        self.leds.fadeRGB( "FaceLeds", 0xffffff, rDuration )
        self.onDone()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                        </Box>
                        <Box name="Wait" id="10" tooltip="Wait a moment before sending a signal on the output. The wait can be stopped any&#x0A;time. You may restart it any time, and it will start again." x="590" y="326">
                            <bitmap>media/images/box/wait.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[import threading

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        self.tb = False

    def onUnload(self):
        if( self.tb ):
            self.tb.cancel()
            self.tb = False

    def triggerOutput( self, rPeriod = 1 ):
        self.onUnload() # to clean everything
        self.timerOutput()

    def startTimer( self, rPeriod = 1 ):
        if( self.tb ):
            self.tb.cancel()
        self.tb = threading.Timer( rPeriod, self.triggerOutput, [rPeriod] )
        self.tb.start()

    def onInput_onStart(self):
        self.startTimer( self.getParameter("Timeout (s)") )

    def onInput_onStop(self):
        bRunning = self.tb
        self.onUnload()
        if( bRunning and self.getParameter("Trigger timerOutput if cancelled")):
            self.timerOutput()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                            <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is ellapsed, or if the box is stopped." id="4" />
                            <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="4" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                            <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="6" />
                        </Box>
                        <Box name="Blink" id="11" tooltip="This box makes NAO blink once." x="332" y="521">
                            <bitmap>media/images/box/interaction/LED.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        self.leds = ALProxy("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05
        self.leds.post.fadeRGB( "FaceLed0", 0x000000, rDuration )
        self.leds.post.fadeRGB( "FaceLed1", 0x000000, rDuration )
        self.leds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration )
        self.leds.post.fadeRGB( "FaceLed3", 0x000000, rDuration )
        self.leds.post.fadeRGB( "FaceLed4", 0x000000, rDuration )
        self.leds.post.fadeRGB( "FaceLed5", 0x000000, rDuration )
        self.leds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration )
        self.leds.fadeRGB( "FaceLed7", 0x000000, rDuration )
        time.sleep( 0.1 )
        self.leds.fadeRGB( "FaceLeds", 0xffffff, rDuration )
        self.onDone()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                        </Box>
                        <Box name="Wait" id="12" tooltip="Wait a moment before sending a signal on the output. The wait can be stopped any&#x0A;time. You may restart it any time, and it will start again." x="197" y="514">
                            <bitmap>media/images/box/wait.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[import threading

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        self.tb = False

    def onUnload(self):
        if( self.tb ):
            self.tb.cancel()
            self.tb = False

    def triggerOutput( self, rPeriod = 1 ):
        self.onUnload() # to clean everything
        self.timerOutput()

    def startTimer( self, rPeriod = 1 ):
        if( self.tb ):
            self.tb.cancel()
        self.tb = threading.Timer( rPeriod, self.triggerOutput, [rPeriod] )
        self.tb.start()

    def onInput_onStart(self):
        self.startTimer( self.getParameter("Timeout (s)") )

    def onInput_onStop(self):
        bRunning = self.tb
        self.onUnload()
        if( bRunning and self.getParameter("Trigger timerOutput if cancelled")):
            self.timerOutput()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                            <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is ellapsed, or if the box is stopped." id="4" />
                            <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="3" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                            <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="6" />
                        </Box>
                        <Box name="Blink" id="13" tooltip="This box makes NAO blink once." x="604" y="522">
                            <bitmap>media/images/box/interaction/LED.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        self.leds = ALProxy("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05
        self.leds.post.fadeRGB( "FaceLed0", 0x000000, rDuration )
        self.leds.post.fadeRGB( "FaceLed1", 0x000000, rDuration )
        self.leds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration )
        self.leds.post.fadeRGB( "FaceLed3", 0x000000, rDuration )
        self.leds.post.fadeRGB( "FaceLed4", 0x000000, rDuration )
        self.leds.post.fadeRGB( "FaceLed5", 0x000000, rDuration )
        self.leds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration )
        self.leds.fadeRGB( "FaceLed7", 0x000000, rDuration )
        time.sleep( 0.1 )
        self.leds.fadeRGB( "FaceLeds", 0xffffff, rDuration )
        self.onDone()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                        </Box>
                        <Box name="Wait" id="14" tooltip="Wait a moment before sending a signal on the output. The wait can be stopped any&#x0A;time. You may restart it any time, and it will start again." x="477" y="523">
                            <bitmap>media/images/box/wait.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[import threading

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        self.tb = False

    def onUnload(self):
        if( self.tb ):
            self.tb.cancel()
            self.tb = False

    def triggerOutput( self, rPeriod = 1 ):
        self.onUnload() # to clean everything
        self.timerOutput()

    def startTimer( self, rPeriod = 1 ):
        if( self.tb ):
            self.tb.cancel()
        self.tb = threading.Timer( rPeriod, self.triggerOutput, [rPeriod] )
        self.tb.start()

    def onInput_onStart(self):
        self.startTimer( self.getParameter("Timeout (s)") )

    def onInput_onStop(self):
        bRunning = self.tb
        self.onUnload()
        if( bRunning and self.getParameter("Trigger timerOutput if cancelled")):
            self.timerOutput()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                            <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is ellapsed, or if the box is stopped." id="4" />
                            <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="2.3" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                            <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="6" />
                        </Box>
                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                        <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                        <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="4" />
                        <Link inputowner="4" indexofinput="2" outputowner="1" indexofoutput="4" />
                        <Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" />
                        <Link inputowner="5" indexofinput="2" outputowner="6" indexofoutput="4" />
                        <Link inputowner="7" indexofinput="2" outputowner="8" indexofoutput="4" />
                        <Link inputowner="8" indexofinput="2" outputowner="5" indexofoutput="3" />
                        <Link inputowner="9" indexofinput="2" outputowner="10" indexofoutput="4" />
                        <Link inputowner="10" indexofinput="2" outputowner="7" indexofoutput="3" />
                        <Link inputowner="11" indexofinput="2" outputowner="12" indexofoutput="4" />
                        <Link inputowner="13" indexofinput="2" outputowner="14" indexofoutput="4" />
                        <Link inputowner="14" indexofinput="2" outputowner="11" indexofoutput="3" />
                        <Link inputowner="12" indexofinput="2" outputowner="9" indexofoutput="3" />
                        <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                    </Diagram>
                </BehaviorKeyframe>
            </BehaviorLayer>
        </Timeline>
    </Box>
</ChoregrapheProject>
